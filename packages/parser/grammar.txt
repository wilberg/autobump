// This file is only to remind myself of the grammar to be used in this language.

// + one or more
// * zero or more
// ? zero or once
// () group
// | pipe

fragment = (CONSTANT | tag | block)*;
tag = "{" expression "}";
expression = equality;
equality = comparison ( ( "==" | "!=" ) comparison )*;
comparison = term ( ( ">" | ">=" | "<" | "<=" ) term )*;
term = factor ( ( "-" | "+" ) factor )*;
factor = unary ( ( "*" | "/" ) unary )*;
unary = ( "!" | "-" ) unary | primary;
reference = IDENTIFIER ( "." IDENTIFIER )*;
primary = NUMBER | STRING | "true" | "false" | "null" | reference | "(" expression ")";

fragment
fragment
fragment